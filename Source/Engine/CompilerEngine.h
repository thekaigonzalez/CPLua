#include <iostream>
#include <lua5.3/lualib.h>
#include <lua5.3/lauxlib.h>
#include <lua5.3/lua.hpp>
#include <fstream>
#include <filesystem>
void PrinWork()
{
    std::cout << std::filesystem::current_path();
}
void CP_CompileLua(const std::string& fname, const std::string& outname = "a.out")
{
    std::ifstream LuaFile(fname);
    if (!LuaFile)
    {
        std::cout << "No object named " << fname << " found in Filesystem! Cancelling operation." << std::endl;
    }
    else {
        std::string bits;
        std::string scriptString;
        while (getline(LuaFile, bits))
        {
            scriptString += bits + "\n";
        }

        std::ofstream CXX("tmp.cpp");
        system(("luac -o " + outname + ".bin " + fname).c_str());

        CXX << "#include <lua5.3/lua.hpp>\n"
               "\n"
               "#include <lua5.3/lauxlib.h>\n"
               "#include <lua5.3/lualib.h>\n"
               "\n"
               "// GENERATED BY CPLUA\n"
               "// IF THIS FILE WASN'T DELETED, EDIT AT YOUR OWN RISK\n"
               "// Generated on " << __DATE__ <<
               "\nint main(int argc, char *argv[])\n"
               "{\n"
               "//    DO NOT EDIT\n"
               "    lua_State *L = luaL_newstate();\n"
               "    luaL_openlibs(L);\n"
               "    if (luaL_dofile(L, \"" << outname << ".bin\") == 1)\n"
               "    {\n"
               "        fprintf(stderr,\"error in extension code: %s\\n\",lua_tostring(L,-1));\n"
               "    }\n"
               "    return 0;\n"
               "}\n";
        CXX.close();

        system(("g++ tmp.cpp -llua5.3 -ldl -Wall -o " + outname).c_str());

    }
}